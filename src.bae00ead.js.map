{"version":3,"sources":["data/dataStore.js","framework/element.js","utils.js","data/openTripMapAPI.js","data/fetchData.js","data/regionData.js","framework/render.js","components/ShowRegions.js","components/ShowSearchInput.js","components/Checkbox/Checkbox.js","components/Checkbox/index.js","components/ShowAvailableKinds.js","components/ShowPlaces.js","components/ShowPlaceInfo.js","components/App.js","index.js"],"names":["dataStore","regionPlaces","selectedPlaces","placeToShow","searchRequest","availableKinds","isDataLoading","error","placesInfo","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","kinds","regionsCoordinates","Krym","lon_min","lon_max","lat_min","lat_max","Volyn","Kyiv","Khmelnytskyi","Zhytomyr","Ternopil","Rivne","Lviv","Kirovograd","Dnipropetrovsk","Kharkiv","Poltava","Cherkasy","Sumy","Chernihiv","Zaporizhzhia","Kherson","Donetsk","Luhansk","Zakarpattia","Chernivtsi","Mykolaiv","Odesa","Vinnytsia","regions","keys","getOpenTripMapUrl","regionName","getOpenTripMarPlaceUrl","placexid","loadRegionPlaces","region","url","fetch","then","response","json","data","loadPlaceInfo","placeToLoad","selectRegion","place","charCode","charCodeAt","push","xid","rate","split","selectAvailableKinds","catch","finally","renderApp","item","kindsOfObject","concat","filter","some","kind","every","selectPlaces","filterByKinds","findPlaces","toUpperCase","searchedPlaces","selectedKinds","changeStatus","checkStatus","selectPlaceToShow","checkPlaceInfo","length","hasOwnProperty","Promise","resolve","getPlaceInfo","Component","Target","componentFunction","target","innerHTML","searchInput","getElementById","focus","selectionStart","findSVGElements","svg","contentDocument","svgPolyline","querySelectorAll","svgPath","querySelector","i","id","kyiv","ShowRegions","styles","title_start","obj_map_of_ukraine","mapOfUkraine","ShowSearchInput","search_input","Checkbox","label","onChange","checked","check","option","check__input","check__box","ShowAvailableKinds","map","ShowPlaces","ul_list","button_place","link","ShowPlaceInfo","info_message","title_place_info","meta_place_info","point","lat","lon","wikipedia","image_block_place_info","preview","source","text_place_info","wikipedia_extracts","text","App","error_message","map_of_ukraine","container","list_block","place_info"],"mappings":"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","file":"src.bae00ead.js","sourceRoot":"..\\src","sourcesContent":["const dataStore = {\n  regionPlaces: [],\n  selectedPlaces: [],\n  placeToShow: '',\n  searchRequest: '',\n  availableKinds: [],\n  isDataLoading: false,\n  error: null,\n  placesInfo: {},\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\n        and regular tags in wrapper functions that expect children as the 2nd param\n       */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","export const kinds = [\n  'architecture',\n  'cultural',\n  'historic',\n  'industrial_facilities',\n  'natural',\n  'other',\n  'religion',\n];\n","export const regionsCoordinates = {\n  Krym: {\n    lon_min: 32.4642563,\n    lon_max: 36.5732288,\n    lat_min: 44.3907396,\n    lat_max: 45.9511497,\n  },\n  Volyn: {\n    lon_min: 24.1287231,\n    lon_max: 25.5373764,\n    lat_min: 50.6911293,\n    lat_max: 51.6681902,\n  },\n  Kyiv: {\n    lon_min: 29.7125244,\n    lon_max: 30.3724766,\n    lat_min: 49.3283665,\n    lat_max: 51.4423992,\n  },\n  Khmelnytskyi: {\n    lon_min: 26.3889885,\n    lon_max: 27.3504639,\n    lat_min: 48.6145267,\n    lat_max: 50.2584005,\n  },\n  Zhytomyr: {\n    lon_min: 27.6812553,\n    lon_max: 29.2579651,\n    lat_min: 49.8918697,\n    lat_max: 51.4189074,\n  },\n  Ternopil: {\n    lon_min: 25.2999687,\n    lon_max: 26.1488342,\n    lat_min: 48.8745383,\n    lat_max: 49.8451229,\n  },\n  Rivne: {\n    lon_min: 26.0971642,\n    lon_max: 26.8395996,\n    lat_min: 50.5224859,\n    lat_max: 51.7598717,\n  },\n  Lviv: {\n    lon_min: 23.47229,\n    lon_max: 24.7221565,\n    lat_min: 49.5465978,\n    lat_max: 50.242704,\n  },\n  Kirovograd: {\n    lon_min: 30.591259,\n    lon_max: 33.4671021,\n    lat_min: 48.224787,\n    lat_max: 48.7110135,\n  },\n  Dnipropetrovsk: {\n    lon_min: 33.8109398,\n    lon_max: 36.0679436,\n    lat_min: 48.1351628,\n    lat_max: 48.7620733,\n  },\n  Kharkiv: {\n    lon_min: 35.4703903,\n    lon_max: 37.6388168,\n    lat_min: 49.2184941,\n    lat_max: 50.219094,\n  },\n  Poltava: {\n    lon_min: 32.8285217,\n    lon_max: 34.8431396,\n    lat_min: 49.2067196,\n    lat_max: 50.0993309,\n  },\n  Cherkasy: {\n    lon_min: 31.2179947,\n    lon_max: 32.4386787,\n    lat_min: 49.0775767,\n    lat_max: 49.8202651,\n  },\n  Sumy: {\n    lon_min: 33.2145882,\n    lon_max: 35.1259518,\n    lat_min: 50.5399447,\n    lat_max: 51.1806343,\n  },\n  Chernihiv: {\n    lon_min: 30.9596443,\n    lon_max: 32.9368401,\n    lat_min: 50.7713164,\n    lat_max: 52.0050683,\n  },\n  Zaporizhzhia: {\n    lon_min: 34.9693108,\n    lon_max: 36.032238,\n    lat_min: 46.4869288,\n    lat_max: 48.0394139,\n  },\n  Kherson: {\n    lon_min: 32.409668,\n    lon_max: 34.6206665,\n    lat_min: 46.2367932,\n    lat_max: 46.813219,\n  },\n  Donetsk: {\n    lon_min: 37.1887207,\n    lon_max: 38.2104492,\n    lat_min: 46.9108747,\n    lat_max: 48.8710382,\n  },\n  Luhansk: {\n    lon_min: 38.4847641,\n    lon_max: 39.6823597,\n    lat_min: 48.3014667,\n    lat_max: 49.6119335,\n  },\n  Zakarpattia: {\n    lon_min: 22.2761536,\n    lon_max: 23.6830902,\n    lat_min: 48.359671,\n    lat_max: 48.6519642,\n  },\n  Chernivtsi: {\n    lon_min: 25.6214476,\n    lon_max: 26.1721802,\n    lat_min: 47.9899504,\n    lat_max: 48.5238812,\n  },\n  'Ivano-Frankivsk': {\n    lon_min: 24.1834831,\n    lon_max: 25.1164627,\n    lat_min: 48.40197,\n    lat_max: 48.9546355,\n  },\n  Mykolaiv: {\n    lon_min: 31.3247681,\n    lon_max: 32.9201889,\n    lat_min: 46.863947,\n    lat_max: 47.7465958,\n  },\n  Odesa: {\n    lon_min: 30.1241684,\n    lon_max: 30.7727051,\n    lat_min: 45.8364541,\n    lat_max: 47.5973662,\n  },\n  Vinnytsia: {\n    lon_min: 27.9656982,\n    lon_max: 29.4986343,\n    lat_min: 48.3264685,\n    lat_max: 49.5904614,\n  },\n  'Kyiv city': {\n    lon_min: 30.4126453,\n    lon_max: 30.6572628,\n    lat_min: 50.3429955,\n    lat_max: 50.5214763,\n  },\n};\nexport const regions = Object.keys(regionsCoordinates);\n\nexport function getOpenTripMapUrl(regionName) {\n  const { lon_min, lon_max, lat_min, lat_max } = regionsCoordinates[regionName];\n  return `https://api.opentripmap.com/0.1/en/places/bbox?lon_min=${lon_min}&lon_max=${lon_max}&lat_min=${lat_min}&lat_max=${lat_max}&src_attr=wikidata&format=json&limit=100&apikey=${process.env.OPEN_TRIP_MAP_API_KEY}`;\n}\nexport function getOpenTripMarPlaceUrl(placexid) {\n  return `https://api.opentripmap.com/0.1/en/places/xid/${placexid}?apikey=${process.env.OPEN_TRIP_MAP_API_KEY}`;\n}\n","import { getOpenTripMapUrl, getOpenTripMarPlaceUrl } from './openTripMapAPI';\n\nexport function loadRegionPlaces(region) {\n  const url = getOpenTripMapUrl(region);\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nexport function loadPlaceInfo(placeToLoad) {\n  const url = getOpenTripMarPlaceUrl(placeToLoad);\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => data);\n}\n","import { kinds } from '../utils';\nimport { loadRegionPlaces, loadPlaceInfo } from './fetchData';\nimport renderApp from '../framework/render';\n\nexport function selectRegion(region) {\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  loadRegionPlaces(region)\n    .then(data => {\n      window.dataStore.isDataLoading = false;\n      // if (error) {\n      //   window.dataStore.error = error;\n      //} else if (data) {\n      //data = data.data;\n      for (let place in data) {\n        const charCode = data[place].name.charCodeAt(0);\n        if (charCode > 1030 && charCode < 1112) {\n          window.dataStore.regionPlaces.push({\n            xid: data[place].xid,\n            name: data[place].name,\n            rate: data[place].rate,\n            kinds: data[place].kinds.split(','),\n          });\n        }\n      }\n      selectAvailableKinds();\n      window.dataStore.selectedPlaces = [...window.dataStore.regionPlaces];\n      //}\n    })\n    .catch(error => {\n      window.dataStore.error = 'Cталася помилка ' + error;\n    })\n    .finally(renderApp);\n}\n\nfunction selectAvailableKinds() {\n  let availableKinds = [];\n  for (let item in window.dataStore.regionPlaces) {\n    let kindsOfObject = window.dataStore.regionPlaces[item].kinds;\n    availableKinds = availableKinds.concat(\n      kindsOfObject.filter(\n        item => kinds.some(kind => kind === item) && availableKinds.every(kind => kind != item),\n      ),\n    );\n  }\n  for (let kind in availableKinds) {\n    window.dataStore.availableKinds[availableKinds[kind]] = true;\n  }\n}\nexport function selectPlaces() {\n  filterByKinds();\n  findPlaces();\n  renderApp();\n}\nfunction findPlaces() {\n  let searchRequest = window.dataStore.searchRequest.toUpperCase();\n  let searchedPlaces = window.dataStore.selectedPlaces.filter(item =>\n    item.name.toUpperCase().includes(searchRequest),\n  );\n  window.dataStore.selectedPlaces = searchedPlaces;\n}\nfunction filterByKinds() {\n  let selectedKinds = [];\n  for (let item in window.dataStore.availableKinds) {\n    if (window.dataStore.availableKinds[item] == true) selectedKinds.push(item);\n  }\n  window.dataStore.selectedPlaces = window.dataStore.regionPlaces.filter(item =>\n    item.kinds.some(value => selectedKinds.some(kind => value === kind)),\n  );\n}\nexport function changeStatus(value) {\n  window.dataStore.availableKinds[value] = !window.dataStore.availableKinds[value];\n  selectPlaces();\n}\nexport function checkStatus(value) {\n  if (window.dataStore.availableKinds[value] == true) return true;\n}\n\nexport function selectPlaceToShow(place) {\n  window.dataStore.placeToShow = place;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  checkPlaceInfo()\n    .then(data => {\n      //window.dataStore.isDataLoading = false;\n      //if (error) window.dataStore.error = error;\n      //else if (data) {\n      if (Object.keys(data).length !== 0) window.dataStore.placesInfo[place] = data;\n      //}\n    })\n    .catch(error => {\n      window.dataStore.error = `Cталася помилка: ${error}`;\n    })\n    .finally(renderApp);\n}\nfunction checkPlaceInfo() {\n  const { placeToShow, placesInfo } = window.dataStore;\n  if (!placesInfo.hasOwnProperty(placeToShow)) {\n    return loadPlaceInfo(placeToShow);\n  }\n  return Promise.resolve({});\n}\nexport function getPlaceInfo() {\n  const { placeToShow, placesInfo } = window.dataStore;\n  return placesInfo[placeToShow];\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { selectRegion } from '../data/regionData';\nimport { regions } from '../data/openTripMapAPI';\n\nlet Component, Target;\n\nexport default function renderApp(componentFunction = null, target = null) {\n  if (componentFunction) Component = componentFunction;\n  if (target) Target = target;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n  const searchInput = document.getElementById('search');\n  if (searchInput) {\n    searchInput.focus();\n    searchInput.selectionStart = searchInput.value.length;\n  } else window.addEventListener('load', findSVGElements, false);\n}\n\nfunction findSVGElements() {\n  var svg = document.getElementById('mapOfUkraine').contentDocument;\n  var svgPolyline = svg.querySelectorAll('polyline');\n  var svgPath = svg.querySelector('path');\n  for (let i = 0; i < svgPolyline.length; i++) {\n    const region = svg.getElementById(svgPolyline[i].id);\n    region.setAttribute('value', `${regions[i]}`);\n    region.addEventListener('click', e => {\n      selectRegion(`${regions[i]}`);\n    });\n  }\n  const kyiv = svg.getElementById(svgPath.id);\n  kyiv.setAttribute('value', `${regions[25]}`);\n  kyiv.addEventListener('click', e => {\n    selectRegion(regions[25]);\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport mapOfUkraine from '../map-ukraine.svg';\n\nexport function ShowRegions() {\n  return (\n    <>\n      <h1 class={styles.title_start}>\n        Подорожуй<span>Україною</span>\n      </h1>\n      <object\n        id=\"mapOfUkraine\"\n        class={styles.obj_map_of_ukraine}\n        type=\"image/svg+xml\"\n        data={mapOfUkraine}\n        src={mapOfUkraine}\n      ></object>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { selectPlaces } from '../data/regionData';\nexport function ShowSearchInput() {\n  return (\n    <input\n      id=\"search\"\n      class={styles.search_input}\n      value={window.dataStore.searchRequest}\n      onsearch={e => {\n        window.dataStore.searchRequest = e.target.value;\n        selectPlaces();\n      }}\n      onkeyup={e => {\n        window.dataStore.searchRequest = e.target.value;\n        selectPlaces();\n      }}\n      type=\"search\"\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './Checkbox.css';\n\nexport default function Checkbox({ label = '', value = '', onChange = null, checked = false }) {\n  return (\n    <label className={[styles.check, styles.option]}>\n      <input\n        className={styles.check__input}\n        type=\"checkbox\"\n        value={value}\n        onChange={onChange}\n        checked={checked}\n      />\n      <span className={styles.check__box}></span>\n      {label}\n    </label>\n  );\n}\n","export { default } from './Checkbox';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { changeStatus, checkStatus } from '../data/regionData';\nimport { createElement, createFragment } from '../framework/element';\nimport Checkbox from './Checkbox';\n\nexport function ShowAvailableKinds() {\n  return (\n    <>\n      {Object.keys(window.dataStore.availableKinds).map(item => (\n        <Checkbox\n          label={item}\n          value={item}\n          onChange={e => changeStatus(e.target.value)}\n          checked={checkStatus(item)}\n        />\n      ))}\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { selectPlaceToShow } from '../data/regionData';\n\nexport function ShowPlaces() {\n  return (\n    <>\n      <ul class={styles.ul_list}>\n        {window.dataStore.selectedPlaces.map(item => (\n          <li>\n            <button\n              class={styles.button_place + ' ' + styles.link}\n              value={item.xid}\n              onclick={e => selectPlaceToShow(e.target.value)}\n            >\n              {item.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { getPlaceInfo } from '../data/regionData';\n\nexport function ShowPlaceInfo() {\n  if (window.dataStore.placeToShow == '')\n    return <h2 class={styles.info_message}>Обирай що цікавить</h2>;\n  else {\n    const place = getPlaceInfo();\n    return (\n      <>\n        <div class={styles.title_place_info}>\n          <strong>{place.name}</strong>\n        </div>\n        <div class={styles.meta_place_info}>\n          GPS: {place.point.lat}, {place.point.lon} |{' '}\n          <a class=\"${styles.url_place_info} ${styles.link}\" href={place.wikipedia}>\n            Wikipedia\n          </a>\n        </div>\n        {place.hasOwnProperty('preview') && (\n          <div class={styles.image_block_place_info}>\n            <img src={place.preview.source} alt=\"\" />\n          </div>\n        )}\n        {\n          <p class={styles.text_place_info}>\n            {place.hasOwnProperty('wikipedia_extracts') ? place.wikipedia_extracts.text : ''}\n          </p>\n        }\n      </>\n    );\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { ShowRegions } from './ShowRegions';\nimport { ShowSearchInput } from './ShowSearchInput';\nimport { ShowAvailableKinds } from './ShowAvailableKinds';\nimport { ShowPlaces } from './ShowPlaces';\nimport { ShowPlaceInfo } from './ShowPlaceInfo';\n\nexport default function App() {\n  if (window.dataStore.error !== null)\n    //content = `${window.dataStore.error}`;\n    return <h2 class={styles.error_message}>{window.dataStore.error}</h2>;\n  else if (window.dataStore.regionPlaces.length == 0)\n    return (\n      <div class={styles.map_of_ukraine}>\n        <ShowRegions />\n      </div>\n    );\n  else {\n    return (\n      <div class={styles.container}>\n        <div class={styles.list_block}>\n          <ShowSearchInput />\n          <ShowAvailableKinds />\n          <ShowPlaces />\n        </div>\n        <div class={styles.place_info}>\n          <ShowPlaceInfo />\n        </div>\n      </div>\n    );\n  }\n}\n","// Start from here\n\nimport dataStore from './data/dataStore';\nimport styles from './style.css';\n\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\nwindow.styles = styles;\n\nrenderApp(App, document.getElementById('app-root'));\n"]}